// <auto-generated />
using System;
using IncidentManagement.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IncidentManagement.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200512131127_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("IncidentManagement.DataAccess.Entities.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<float>("LocationLatitude")
                        .HasColumnType("REAL");

                    b.Property<float>("LocationLongitude")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Occurrence")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("LocationLatitude", "LocationLongitude");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("IncidentManagement.DataAccess.Entities.Location", b =>
                {
                    b.Property<float>("Latitude")
                        .HasColumnType("float(10,6)");

                    b.Property<float>("Longitude")
                        .HasColumnType("float(10,6)");

                    b.HasKey("Latitude", "Longitude");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("IncidentManagement.DataAccess.Entities.Incident", b =>
                {
                    b.HasOne("IncidentManagement.DataAccess.Entities.Location", "Location")
                        .WithMany("Incidents")
                        .HasForeignKey("LocationLatitude", "LocationLongitude")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
